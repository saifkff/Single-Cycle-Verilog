$date
	Tue May 13 15:37:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top_tb $end
$var wire 4 ! sel_bit [3:0] $end
$var wire 1 " xorrr $end
$var wire 1 # xorr $end
$var wire 1 $ xori $end
$var wire 1 % wenb $end
$var wire 1 & sw $end
$var wire 1 ' sub $end
$var wire 1 ( srlr $end
$var wire 1 ) srli $end
$var wire 1 * srl $end
$var wire 1 + srar $end
$var wire 1 , srai $end
$var wire 1 - sra $end
$var wire 1 . sltur $end
$var wire 1 / sltui $end
$var wire 1 0 sltu $end
$var wire 1 1 sltr $end
$var wire 1 2 slti $end
$var wire 1 3 slt $end
$var wire 1 4 sllr $end
$var wire 1 5 slli $end
$var wire 1 6 sll $end
$var wire 1 7 sh $end
$var wire 4 8 sel_imm [3:0] $end
$var wire 2 9 sel_bit_mux [1:0] $end
$var wire 4 : sel [3:0] $end
$var wire 1 ; sb $end
$var wire 1 < rs2_imm_sel $end
$var wire 5 = rs2 [4:0] $end
$var wire 32 > rs1_plus_imm [31:0] $end
$var wire 5 ? rs1 [4:0] $end
$var wire 32 @ read_data [31:0] $end
$var wire 5 A rdi [4:0] $end
$var wire 32 B pc_plus4 [31:0] $end
$var wire 32 C pc_imm [31:0] $end
$var wire 32 D pc [31:0] $end
$var wire 32 E outputt [31:0] $end
$var wire 32 F outdata_store [31:0] $end
$var wire 3 G out_for [2:0] $end
$var wire 32 H out_1 [31:0] $end
$var wire 1 I out3 $end
$var wire 1 J out2 $end
$var wire 1 K out1 $end
$var wire 1 L out0 $end
$var wire 1 M orrr $end
$var wire 1 N orr $end
$var wire 1 O ori $end
$var wire 1 P lw $end
$var wire 1 Q lui_enb $end
$var wire 1 R load_enb $end
$var wire 1 S lhu $end
$var wire 1 T lh $end
$var wire 1 U lbu $end
$var wire 1 V lb $end
$var wire 1 W jalreverse $end
$var wire 1 X jalr $end
$var wire 1 Y jal_enb $end
$var wire 1 Z jal $end
$var wire 1 [ in_to_pr $end
$var wire 32 \ imm [31:0] $end
$var wire 32 ] data2 [31:0] $end
$var wire 32 ^ data1 [31:0] $end
$var wire 1 _ branch_taken $end
$var wire 1 ` branch_enb $end
$var wire 1 a bne $end
$var wire 1 b bltu $end
$var wire 1 c blt $end
$var wire 1 d bgeu $end
$var wire 1 e bge $end
$var wire 1 f beq $end
$var wire 1 g auipc_wenb $end
$var wire 1 h andr $end
$var wire 1 i andi $end
$var wire 1 j andd $end
$var wire 32 k alu_out [31:0] $end
$var wire 1 l addr $end
$var wire 1 m addi2 $end
$var wire 1 n addi $end
$var wire 1 o add $end
$var reg 1 p clk $end
$var reg 1 q enable $end
$var reg 1 r rst $end
$scope module DM $end
$var wire 1 p clk $end
$var wire 32 s write_data [31:0] $end
$var wire 1 & sw $end
$var wire 1 7 sh $end
$var wire 1 ; sb $end
$var wire 1 P lw $end
$var wire 1 R load_enb $end
$var wire 1 S lhu $end
$var wire 1 T lh $end
$var wire 1 U lbu $end
$var wire 1 V lb $end
$var wire 32 t address [31:0] $end
$var reg 32 u read_data [31:0] $end
$upscope $end
$scope module adder_auipc $end
$var wire 32 v pc_plus_imm_for_auipc [31:0] $end
$var wire 32 w pc_for_auipc [31:0] $end
$var wire 32 x imm_for_btype [31:0] $end
$upscope $end
$scope module alu $end
$var wire 4 y sel [3:0] $end
$var wire 32 z dataB [31:0] $end
$var wire 32 { dataA [31:0] $end
$var reg 1 _ branch_taken $end
$var reg 32 | out [31:0] $end
$upscope $end
$scope module control_inst $end
$var wire 1 o add $end
$var wire 1 n addi $end
$var wire 1 m addi2 $end
$var wire 1 l addr $end
$var wire 1 j andd $end
$var wire 1 i andi $end
$var wire 1 h andr $end
$var wire 1 g auipc_wenb $end
$var wire 1 f beq $end
$var wire 1 e bge $end
$var wire 1 d bgeu $end
$var wire 1 c blt $end
$var wire 1 b bltu $end
$var wire 1 a bne $end
$var wire 1 ` branch_enb $end
$var wire 1 _ branch_taken $end
$var wire 1 [ in_to_pr $end
$var wire 1 Z jal $end
$var wire 1 Y jal_enb $end
$var wire 1 X jalr $end
$var wire 1 W jalreverse $end
$var wire 1 V lb $end
$var wire 1 U lbu $end
$var wire 1 T lh $end
$var wire 1 S lhu $end
$var wire 1 R load_enb $end
$var wire 1 Q lui_enb $end
$var wire 1 P lw $end
$var wire 1 O ori $end
$var wire 1 N orr $end
$var wire 1 M orrr $end
$var wire 1 L out0 $end
$var wire 1 K out1 $end
$var wire 1 J out2 $end
$var wire 1 I out3 $end
$var wire 1 < rs2_imm_sel $end
$var wire 1 ; sb $end
$var wire 1 7 sh $end
$var wire 1 6 sll $end
$var wire 1 5 slli $end
$var wire 1 4 sllr $end
$var wire 1 3 slt $end
$var wire 1 2 slti $end
$var wire 1 1 sltr $end
$var wire 1 0 sltu $end
$var wire 1 / sltui $end
$var wire 1 . sltur $end
$var wire 1 - sra $end
$var wire 1 , srai $end
$var wire 1 + srar $end
$var wire 1 * srl $end
$var wire 1 ) srli $end
$var wire 1 ( srlr $end
$var wire 1 ' sub $end
$var wire 1 & sw $end
$var wire 1 % wenb $end
$var wire 1 $ xori $end
$var wire 1 # xorr $end
$var wire 1 " xorrr $end
$var wire 32 } instruction [31:0] $end
$var wire 1 ~ i8 $end
$var wire 1 !" i7 $end
$var wire 1 "" i6 $end
$var wire 1 #" i5 $end
$var wire 1 $" i4 $end
$var wire 1 %" i3 $end
$var wire 1 &" i2 $end
$var wire 1 '" i1 $end
$var wire 1 (" i0 $end
$var reg 4 )" sel [3:0] $end
$var reg 2 *" sel_bit_mux [1:0] $end
$upscope $end
$scope module dec $end
$var wire 5 +" rs2 [4:0] $end
$var wire 5 ," rs1 [4:0] $end
$var wire 5 -" rdi [4:0] $end
$var wire 32 ." instruction [31:0] $end
$upscope $end
$scope module imm_gen $end
$var wire 32 /" instruction [31:0] $end
$var reg 32 0" imm [31:0] $end
$var reg 4 1" sel [3:0] $end
$upscope $end
$scope module mux2to1 $end
$var wire 32 2" imm_input [31:0] $end
$var wire 1 < select $end
$var wire 32 3" reg_input [31:0] $end
$var wire 32 4" out [31:0] $end
$upscope $end
$scope module mux4to1 $end
$var wire 32 5" pc_plus_imm [31:0] $end
$var wire 32 6" pc_plus_imm_2 [31:0] $end
$var wire 2 7" sel [1:0] $end
$var wire 32 8" rs1_plus_imm_for_jalr [31:0] $end
$var wire 32 9" pc_plus_4 [31:0] $end
$var reg 32 :" out [31:0] $end
$upscope $end
$scope module mux_8to1 $end
$var wire 32 ;" alu_result [31:0] $end
$var wire 32 <" imm_for_b_type [31:0] $end
$var wire 32 =" load_result [31:0] $end
$var wire 32 >" pc_plus_imm [31:0] $end
$var wire 3 ?" sel [2:0] $end
$var wire 32 @" pc_plus_4 [31:0] $end
$var reg 32 A" out [31:0] $end
$upscope $end
$scope module muxx $end
$var wire 4 B" sel_bit [3:0] $end
$var wire 32 C" rs2 [31:0] $end
$var reg 32 D" output_data_forstore [31:0] $end
$upscope $end
$scope module pc_4 $end
$var wire 32 E" pc_plus4 [31:0] $end
$var wire 32 F" pc [31:0] $end
$upscope $end
$scope module prienc2 $end
$var wire 1 G" alu_result $end
$var wire 1 _ enable_for_auipc $end
$var wire 1 Y jal_enb $end
$var wire 1 R load_enable $end
$var wire 1 Q lui_enable $end
$var wire 5 H" input_concat [4:0] $end
$var reg 3 I" sel [2:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 p clk $end
$var wire 32 J" data_in [31:0] $end
$var wire 1 q enable $end
$var wire 5 K" rd_select [4:0] $end
$var wire 1 r reset $end
$var wire 5 L" rs1 [4:0] $end
$var wire 5 M" rs2 [4:0] $end
$var reg 32 N" data_out1 [31:0] $end
$var reg 32 O" data_out2 [31:0] $end
$var integer 32 P" i [31:0] $end
$upscope $end
$scope module rs1_imm $end
$var wire 32 Q" imm_input [31:0] $end
$var wire 32 R" rs1 [31:0] $end
$var reg 32 S" rs1_plus_im [31:0] $end
$upscope $end
$scope module uut $end
$var wire 1 p clk $end
$var wire 32 T" pc_plus_4 [31:0] $end
$var wire 32 U" pc_plus_imm [31:0] $end
$var wire 32 V" pc_plus_imm_2 [31:0] $end
$var wire 32 W" rs1_plus_imm_for_jalr [31:0] $end
$var wire 1 r rst $end
$var wire 2 X" sel [1:0] $end
$var wire 32 Y" pc_next [31:0] $end
$var wire 32 Z" pc [31:0] $end
$var wire 32 [" instruction [31:0] $end
$scope module IM $end
$var wire 32 \" instruction [31:0] $end
$var wire 32 ]" addr [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 p clk $end
$var wire 1 ^" pc_write $end
$var wire 1 r rst $end
$var wire 32 _" pc_next [31:0] $end
$var reg 32 `" pc_out [31:0] $end
$upscope $end
$scope module mux4 $end
$var wire 32 a" pc_plus_4 [31:0] $end
$var wire 32 b" pc_plus_imm [31:0] $end
$var wire 32 c" pc_plus_imm_2 [31:0] $end
$var wire 32 d" rs1_plus_imm_for_jalr [31:0] $end
$var wire 2 e" sel [1:0] $end
$var reg 32 f" out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 f"
b0 e"
b1001 d"
b101 c"
b101 b"
b100 a"
b0 `"
b100 _"
1^"
b0 ]"
b10100000000000010010011 \"
b10100000000000010010011 ["
b0 Z"
b100 Y"
b0 X"
b1001 W"
b101 V"
b101 U"
b100 T"
b1001 S"
b0 R"
b101 Q"
b100000 P"
b0 O"
b0 N"
b101 M"
b0 L"
b1 K"
b101 J"
b0 I"
b1 H"
1G"
b0 F"
b100 E"
b0 D"
b0 C"
bz B"
b101 A"
b0 @"
b0 ?"
b101 >"
b0 ="
b101 <"
b101 ;"
b100 :"
b100 9"
b1001 8"
b0 7"
b101 6"
b101 5"
b101 4"
b0 3"
b101 2"
b0 1"
b101 0"
b10100000000000010010011 /"
b10100000000000010010011 ."
b1 -"
b0 ,"
b101 +"
b0 *"
b0 )"
0("
0'"
1&"
0%"
0$"
0#"
0""
0!"
0~
b10100000000000010010011 }
b101 |
b0 {
b101 z
b0 y
b101 x
b0 w
b101 v
b0 u
b101 t
b0 s
1r
1q
0p
1o
1n
0m
0l
b101 k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
b0 ^
b0 ]
b101 \
1[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
b101 H
b0 G
b0 F
b101 E
b100 D
b101 C
b100 B
b1 A
b0 @
b0 ?
b1001 >
b101 =
1<
0;
b0 :
b0 9
b0 8
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
1%
0$
0#
0"
bz !
$end
#5
b100000 P"
1p
#10
0p
0r
#15
b11 E
b11 A"
b11 J"
b11 k
b11 t
b11 |
b11 ;"
b11 H
b11 z
b11 4"
b111 >
b111 8"
b111 S"
b111 W"
b111 d"
b10 A
b10 -"
b10 K"
b11 =
b11 +"
b11 M"
b11 \
b11 x
b11 0"
b11 2"
b11 <"
b11 Q"
b1100000000000100010011 }
b1100000000000100010011 ."
b1100000000000100010011 /"
b1100000000000100010011 ["
b1100000000000100010011 \"
b1000 D
b1000 :"
b1000 Y"
b1000 _"
b1000 f"
b1000 B
b1000 9"
b1000 E"
b1000 T"
b1000 a"
b111 C
b111 v
b111 5"
b111 6"
b111 >"
b111 U"
b111 V"
b111 b"
b111 c"
b100 w
b100 @"
b100 F"
b100 Z"
b100 ]"
b100 `"
1p
#20
0p
#25
b1 E
b1 A"
b1 J"
b1 k
b1 t
b1 |
b1 ;"
b101 ]
b101 s
b101 3"
b101 C"
b101 O"
b1 H
b1 z
b1 4"
b101 >
b101 8"
b101 S"
b101 W"
b101 d"
b11 A
b11 -"
b11 K"
b1 =
b1 +"
b1 M"
b1 \
b1 x
b1 0"
b1 2"
b1 <"
b1 Q"
b100000000000110010011 }
b100000000000110010011 ."
b100000000000110010011 /"
b100000000000110010011 ["
b100000000000110010011 \"
b1100 D
b1100 :"
b1100 Y"
b1100 _"
b1100 f"
b1100 B
b1100 9"
b1100 E"
b1100 T"
b1100 a"
b1001 C
b1001 v
b1001 5"
b1001 6"
b1001 >"
b1001 U"
b1001 V"
b1001 b"
b1001 c"
b1000 w
b1000 @"
b1000 F"
b1000 Z"
b1000 ]"
b1000 `"
1p
#30
0p
#35
b0 E
b0 A"
b0 J"
b0 k
b0 t
b0 |
b0 ;"
b0 ]
b0 s
b0 3"
b0 C"
b0 O"
b0 H
b0 z
b0 4"
b100 >
b100 8"
b100 S"
b100 W"
b100 d"
b100 A
b100 -"
b100 K"
b0 =
b0 +"
b0 M"
b0 \
b0 x
b0 0"
b0 2"
b0 <"
b0 Q"
b1000010011 }
b1000010011 ."
b1000010011 /"
b1000010011 ["
b1000010011 \"
b10000 D
b10000 :"
b10000 Y"
b10000 _"
b10000 f"
b10000 B
b10000 9"
b10000 E"
b10000 T"
b10000 a"
b1100 C
b1100 v
b1100 5"
b1100 6"
b1100 >"
b1100 U"
b1100 V"
b1100 b"
b1100 c"
b1100 w
b1100 @"
b1100 F"
b1100 Z"
b1100 ]"
b1100 `"
1p
#40
0p
#45
b101 E
b101 A"
b101 J"
b101 k
b101 t
b101 |
b101 ;"
b101 H
b101 z
b101 4"
b1001 >
b1001 8"
b1001 S"
b1001 W"
b1001 d"
b101 A
b101 -"
b101 K"
b101 =
b101 +"
b101 M"
b101 \
b101 x
b101 0"
b101 2"
b101 <"
b101 Q"
b10100000000001010010011 }
b10100000000001010010011 ."
b10100000000001010010011 /"
b10100000000001010010011 ["
b10100000000001010010011 \"
b10100 D
b10100 :"
b10100 Y"
b10100 _"
b10100 f"
b10100 B
b10100 9"
b10100 E"
b10100 T"
b10100 a"
b10101 C
b10101 v
b10101 5"
b10101 6"
b10101 >"
b10101 U"
b10101 V"
b10101 b"
b10101 c"
b10000 w
b10000 @"
b10000 F"
b10000 Z"
b10000 ]"
b10000 `"
1p
#50
0p
#55
b1 E
b1 A"
b1 J"
b1 k
b1 t
b1 |
b1 ;"
b1 H
b1 z
b1 4"
b101 >
b101 8"
b101 S"
b101 W"
b101 d"
b100 A
b100 -"
b100 K"
b1 =
b1 +"
b1 M"
b100 ?
b100 ,"
b100 L"
b1 \
b1 x
b1 0"
b1 2"
b1 <"
b1 Q"
b100100000001000010011 }
b100100000001000010011 ."
b100100000001000010011 /"
b100100000001000010011 ["
b100100000001000010011 \"
b11000 D
b11000 :"
b11000 Y"
b11000 _"
b11000 f"
b101 ]
b101 s
b101 3"
b101 C"
b101 O"
b11000 B
b11000 9"
b11000 E"
b11000 T"
b11000 a"
b10101 C
b10101 v
b10101 5"
b10101 6"
b10101 >"
b10101 U"
b10101 V"
b10101 b"
b10101 c"
b10100 w
b10100 @"
b10100 F"
b10100 Z"
b10100 ]"
b10100 `"
1p
#60
0p
#65
0<
xG"
b11 9
b11 *"
b11 7"
b11 X"
b11 e"
0[
b11 G
b11 ?"
b11 I"
b100x H"
1_
1I
b1011 :
b1011 y
b1011 )"
0%
1`
1L
1J
1a
0o
0n
0m
b101 H
b101 z
b101 4"
b10100 E
b10100 A"
b10100 J"
b1 k
b1 t
b1 |
b1 ;"
b1 >
b1 8"
b1 S"
b1 W"
b1 d"
b11101 A
b11101 -"
b11101 K"
b101 =
b101 +"
b101 M"
1~
1#"
1$"
1%"
0&"
b11111111111111111111111111111100 \
b11111111111111111111111111111100 x
b11111111111111111111111111111100 0"
b11111111111111111111111111111100 2"
b11111111111111111111111111111100 <"
b11111111111111111111111111111100 Q"
b10 8
b10 1"
b1 ^
b1 {
b1 N"
b1 R"
b11111110010100100001111011100011 }
b11111110010100100001111011100011 ."
b11111110010100100001111011100011 /"
b11111110010100100001111011100011 ["
b11111110010100100001111011100011 \"
b10100 D
b10100 :"
b10100 Y"
b10100 _"
b10100 f"
b11100 B
b11100 9"
b11100 E"
b11100 T"
b11100 a"
b10100 C
b10100 v
b10100 5"
b10100 6"
b10100 >"
b10100 U"
b10100 V"
b10100 b"
b10100 c"
b11000 w
b11000 @"
b11000 F"
b11000 Z"
b11000 ]"
b11000 `"
1p
#70
0p
#75
b1 H
b1 z
b1 4"
1<
1%
1G"
b0 9
b0 *"
b0 7"
b0 X"
b0 e"
1[
b0 G
b0 ?"
b0 I"
b10 k
b10 t
b10 |
b10 ;"
b1 H"
0_
0I
b0 :
b0 y
b0 )"
0`
0L
0J
1o
1n
0a
b110 >
b110 8"
b110 S"
b110 W"
b110 d"
b100 A
b100 -"
b100 K"
b1 =
b1 +"
b1 M"
0~
0#"
0$"
0%"
1&"
b1 \
b1 x
b1 0"
b1 2"
b1 <"
b1 Q"
b0 8
b0 1"
b100100000001000010011 }
b100100000001000010011 ."
b100100000001000010011 /"
b100100000001000010011 ["
b100100000001000010011 \"
b11000 Y"
b11000 _"
b11000 f"
b11000 D
b11000 :"
b10 E
b10 A"
b10 J"
b11000 B
b11000 9"
b11000 E"
b11000 T"
b11000 a"
b10101 C
b10101 v
b10101 5"
b10101 6"
b10101 >"
b10101 U"
b10101 V"
b10101 b"
b10101 c"
b10100 w
b10100 @"
b10100 F"
b10100 Z"
b10100 ]"
b10100 `"
1p
#80
0p
#85
0<
xG"
b11 9
b11 *"
b11 7"
b11 X"
b11 e"
0[
b11 G
b11 ?"
b11 I"
b100x H"
1_
1I
b1011 :
b1011 y
b1011 )"
0%
1`
1L
1J
1a
0o
0n
0m
b101 H
b101 z
b101 4"
b10100 E
b10100 A"
b10100 J"
b1 k
b1 t
b1 |
b1 ;"
b10 >
b10 8"
b10 S"
b10 W"
b10 d"
b11101 A
b11101 -"
b11101 K"
b101 =
b101 +"
b101 M"
1~
1#"
1$"
1%"
0&"
b11111111111111111111111111111100 \
b11111111111111111111111111111100 x
b11111111111111111111111111111100 0"
b11111111111111111111111111111100 2"
b11111111111111111111111111111100 <"
b11111111111111111111111111111100 Q"
b10 8
b10 1"
b10 ^
b10 {
b10 N"
b10 R"
b11111110010100100001111011100011 }
b11111110010100100001111011100011 ."
b11111110010100100001111011100011 /"
b11111110010100100001111011100011 ["
b11111110010100100001111011100011 \"
b10100 D
b10100 :"
b10100 Y"
b10100 _"
b10100 f"
b11100 B
b11100 9"
b11100 E"
b11100 T"
b11100 a"
b10100 C
b10100 v
b10100 5"
b10100 6"
b10100 >"
b10100 U"
b10100 V"
b10100 b"
b10100 c"
b11000 w
b11000 @"
b11000 F"
b11000 Z"
b11000 ]"
b11000 `"
1p
#90
0p
#95
b1 H
b1 z
b1 4"
1<
1%
1G"
b0 9
b0 *"
b0 7"
b0 X"
b0 e"
1[
b0 G
b0 ?"
b0 I"
b11 k
b11 t
b11 |
b11 ;"
b1 H"
0_
0I
b0 :
b0 y
b0 )"
0`
0L
0J
1o
1n
0a
b111 >
b111 8"
b111 S"
b111 W"
b111 d"
b100 A
b100 -"
b100 K"
b1 =
b1 +"
b1 M"
0~
0#"
0$"
0%"
1&"
b1 \
b1 x
b1 0"
b1 2"
b1 <"
b1 Q"
b0 8
b0 1"
b100100000001000010011 }
b100100000001000010011 ."
b100100000001000010011 /"
b100100000001000010011 ["
b100100000001000010011 \"
b11000 Y"
b11000 _"
b11000 f"
b11000 D
b11000 :"
b11 E
b11 A"
b11 J"
b11000 B
b11000 9"
b11000 E"
b11000 T"
b11000 a"
b10101 C
b10101 v
b10101 5"
b10101 6"
b10101 >"
b10101 U"
b10101 V"
b10101 b"
b10101 c"
b10100 w
b10100 @"
b10100 F"
b10100 Z"
b10100 ]"
b10100 `"
1p
#100
0p
#105
0<
xG"
b11 9
b11 *"
b11 7"
b11 X"
b11 e"
0[
b11 G
b11 ?"
b11 I"
b100x H"
1_
1I
b1011 :
b1011 y
b1011 )"
0%
1`
1L
1J
1a
0o
0n
0m
b101 H
b101 z
b101 4"
b10100 E
b10100 A"
b10100 J"
b1 k
b1 t
b1 |
b1 ;"
b11 >
b11 8"
b11 S"
b11 W"
b11 d"
b11101 A
b11101 -"
b11101 K"
b101 =
b101 +"
b101 M"
1~
1#"
1$"
1%"
0&"
b11111111111111111111111111111100 \
b11111111111111111111111111111100 x
b11111111111111111111111111111100 0"
b11111111111111111111111111111100 2"
b11111111111111111111111111111100 <"
b11111111111111111111111111111100 Q"
b10 8
b10 1"
b11 ^
b11 {
b11 N"
b11 R"
b11111110010100100001111011100011 }
b11111110010100100001111011100011 ."
b11111110010100100001111011100011 /"
b11111110010100100001111011100011 ["
b11111110010100100001111011100011 \"
b10100 D
b10100 :"
b10100 Y"
b10100 _"
b10100 f"
b11100 B
b11100 9"
b11100 E"
b11100 T"
b11100 a"
b10100 C
b10100 v
b10100 5"
b10100 6"
b10100 >"
b10100 U"
b10100 V"
b10100 b"
b10100 c"
b11000 w
b11000 @"
b11000 F"
b11000 Z"
b11000 ]"
b11000 `"
1p
#110
0p
